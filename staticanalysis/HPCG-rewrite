for (int i = 0; i < numberOfCalls; ++i) {
ierr = CG_ref(A, data, b, x, refMaxIters, tolerance, niters, normr, normr0, &ref_times[0], true);
const SparseMatrix & A = A ;
 CGData & data =  data ;
 const Vector & b =  b ;
 Vector & x =  x ;
 const int max_iter =  refMaxIters ;
 const double tolerance =  tolerance ;
 int & niters =  niters ;
 double & normr =  normr ;
 double & normr0 =  normr0 ;
 double * times =  &ref_times[0] ;
 bool doPreconditioning =  true ;
normr = 0.0;
double rtz = 0.0, oldrtz = 0.0, alpha = 0.0, beta = 0.0, pAp = 0.0;
double t0 = 0.0, t1 = 0.0, t2 = 0.0, t3 = 0.0, t4 = 0.0, t5 = 0.0;
local_int_t nrow = A.localNumberOfRows;
Vector & r = data.r;
Vector & z = data.z;
Vector & p = data.p;
Vector & Ap = data.Ap;
DisCosTiC->Exec("FILE:ComputeWAXPBY_ref.c//BREAK:COPY//./nodelevel/machine-files/BroadwellEP_E5-2697v4_CoD.yml//18//-D nrow 100 -D  1.0 100 -D  b 100 -D  -1.0 100 -D  Ap 100 -D  r 100 ", recv);
DisCosTiC->Exec("FILE:ComputeDotProduct_ref.c//BREAK:COPY//./nodelevel/machine-files/BroadwellEP_E5-2697v4_CoD.yml//18//-D nrow 100 -D  r 100 -D  r 100 -D  normr 100 -D  t4 100 ", recv);
normr0 = normr;
for (int k=1; k<=max_iter && normr/normr0 > tolerance; k++ ) {
if (doPreconditioning)

const SparseMatrix & A = A ;
 const Vector & r =  r ;
 Vector & x =  z ;
int ierr = 0;
if (A.mgData!=0) {
int numberOfPresmootherSteps = A.mgData->numberOfPresmootherSteps;
DisCosTiC->Exec("FILE:ComputeSYMGS_ref.c//BREAK:COPY//./nodelevel/machine-files/BroadwellEP_E5-2697v4_CoD.yml//18//-D  100 ", recv);
if (ierr!=0) return ierr;
 if (ierr!=0) return ierr;
DisCosTiC->Exec("FILE:ComputeRestriction_ref.c//BREAK:COPY//./nodelevel/machine-files/BroadwellEP_E5-2697v4_CoD.yml//18//-D A 100 -D  r 100 ", recv);
  if (ierr!=0) return ierr;

  if (ierr!=0) return ierr;
DisCosTiC->Exec("FILE:ComputeProlongation_ref.c//BREAK:COPY//./nodelevel/machine-files/BroadwellEP_E5-2697v4_CoD.yml//18//-D A 100 -D  x 100 ", recv);
  if (ierr!=0) return ierr;
int numberOfPostsmootherSteps = A.mgData->numberOfPostsmootherSteps;
DisCosTiC->Exec("FILE:ComputeSYMGS_ref.c//BREAK:COPY//./nodelevel/machine-files/BroadwellEP_E5-2697v4_CoD.yml//18//-D  100 ", recv);
if (ierr!=0) return ierr;
}
else {
DisCosTiC->Exec("FILE:ComputeSYMGS_ref.c//BREAK:COPY//./nodelevel/machine-files/BroadwellEP_E5-2697v4_CoD.yml//18//-D A 100 -D  r 100 -D  x 100 ", recv);
if (ierr!=0) return ierr;
}

else
DisCosTiC->Exec("FILE:ComputeWAXPBY_ref.c//BREAK:COPY//./nodelevel/machine-files/BroadwellEP_E5-2697v4_CoD.yml//18//-D nrow 100 -D  1.0 100 -D  r 100 -D  0.0 100 -D  r 100 -D  z 100 ", recv);
DisCosTiC->Exec("FILE:ComputeWAXPBY_ref.c//BREAK:COPY//./nodelevel/machine-files/BroadwellEP_E5-2697v4_CoD.yml//18//-D nrow 100 -D  1.0 100 -D  r 100 -D  0.0 100 -D  r 100 -D  z 100 ", recv);
if (k == 1) {
DisCosTiC->Exec("FILE:ComputeDotProduct_ref.c//BREAK:COPY//./nodelevel/machine-files/BroadwellEP_E5-2697v4_CoD.yml//18//-D nrow 100 -D  r 100 -D  z 100 -D  rtz 100 -D  t4 100 ", recv);
}
else {
oldrtz = rtz;
DisCosTiC->Exec("FILE:ComputeDotProduct_ref.c//BREAK:COPY//./nodelevel/machine-files/BroadwellEP_E5-2697v4_CoD.yml//18//-D nrow 100 -D  r 100 -D  z 100 -D  rtz 100 -D  t4 100 ", recv);
beta = rtz/oldrtz;
DisCosTiC->Exec("FILE:ComputeWAXPBY_ref.c//BREAK:COPY//./nodelevel/machine-files/BroadwellEP_E5-2697v4_CoD.yml//18//-D nrow 100 -D  1.0 100 -D  z 100 -D  beta 100 -D  p 100 -D  p 100 ", recv);
}
DisCosTiC->Exec("FILE:ComputeDotProduct_ref.c//BREAK:COPY//./nodelevel/machine-files/BroadwellEP_E5-2697v4_CoD.yml//18//-D nrow 100 -D  p 100 -D  Ap 100 -D  pAp 100 -D  t4 100 ", recv);
alpha = rtz/pAp;
DisCosTiC->Exec("FILE:ComputeWAXPBY_ref.c//BREAK:COPY//./nodelevel/machine-files/BroadwellEP_E5-2697v4_CoD.yml//18//-D nrow 100 -D  1.0 100 -D  x 100 -D  alpha 100 -D  p 100 -D  x 100 ", recv);
DisCosTiC->Exec("FILE:ComputeWAXPBY_ref.c//BREAK:COPY//./nodelevel/machine-files/BroadwellEP_E5-2697v4_CoD.yml//18//-D nrow 100 -D  1.0 100 -D  r 100 -D  -alpha 100 -D  Ap 100 -D  r 100 ", recv);
DisCosTiC->Exec("FILE:ComputeDotProduct_ref.c//BREAK:COPY//./nodelevel/machine-files/BroadwellEP_E5-2697v4_CoD.yml//18//-D nrow 100 -D  r 100 -D  r 100 -D  normr 100 -D  t4 100 ", recv);
niters = k;
}
if (ierr) ++err_count;
totalNiters_ref += niters;
}